services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-boilerplate
    ports:
      - "5001:5001"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: go_starter_kit
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypass
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --innodb-use-native-aio=0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--protocol=tcp", "-uroot", "-prootpass"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: always
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: always
    networks:
      - app-network

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    restart: always
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "4318:4318"   # OTLP HTTP endpoint
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    networks:
      - app-network

volumes:
  prometheus-data:
  grafana-data:
  mysql-data:

networks:
  app-network:
    driver: bridge
